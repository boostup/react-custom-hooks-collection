{"version":3,"sources":["../../src/hooks/useToggleState.js","../../src/hooks/useInputState.js","demoComponents/TogglesDemo.jsx","demoComponents/SWMoviesDemo.jsx","demoComponents/InputTextDemo.jsx","App.js","index.js"],"names":["initialVal","useState","toggle","setState","state","value","e","setValue","TogglesDemo","useToggle","isHappy","setIsHappy","isHeartBroken","setIsHeartBroken","isBanana","setIsBanana","onClick","useInputState","number","setNumber","movie","setMovie","useEffect","a","fetch","resp","json","fetchMovie","onChange","style","fontWeight","fontFamily","fontSize","title","opening_crawl","fontStyle","color","email","updateEmail","resetEmail","password","updatePassword","resetPassword","display","flexDirection","type","App","className","SWMoviesDemo","InputTextDemo","ReactDOM","render","document","getElementById"],"mappings":"iPAEA,EAAe,WAAwB,IAAvBA,EAAuB,0DACXC,mBAA1B,GADqC,mBAC/B,EAD+B,KAC/B,EAD+B,KAE/BC,EAAS,WACbC,OAEF,MAAO,CAACC,EAAR,ICLF,EAAeJ,YAAc,MACDC,mBAA1B,GAD2B,mBACrB,EADqB,KACrB,EADqB,KAQ3B,MAAO,CAACI,EANaC,YACnBC,EAASD,SAATC,QAEY,WACZA,SCUWC,MAff,WAAwB,IAAD,EACSC,GAAU,GADnB,mBACdC,EADc,KACLC,EADK,OAEqBF,GAAU,GAF/B,mBAEdG,EAFc,KAECC,EAFD,OAGWJ,GAAU,GAHrB,mBAGdK,EAHc,KAGJC,EAHI,KAKrB,OACE,6BACE,uCACA,wBAAIC,QAASL,GAAaD,EAAU,eAAO,gBAC3C,wBAAIM,QAASH,GAAmBD,EAAgB,eAAO,gBACvD,wBAAII,QAASD,GAAcD,EAAW,eAAO,kB,uBCVpC,aAAO,IAAD,EACSG,EAAc,GADvB,mBACZC,EADY,KACJC,EADI,OAEOlB,mBAAS,IAFhB,mBAEZmB,EAFY,KAELC,EAFK,KAYnB,OARAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACqBC,MAAM,+BAAD,OAAgCN,IAD1D,cACQO,EADR,YAEEJ,EAFF,SAEiBI,EAAKC,OAFtB,8EADc,uBAAC,WAAD,wBAKdC,KACC,CAACT,IAGF,6BACE,6DACA,wCACA,4BAAQb,MAAOa,EAAQU,SAAUT,GAC/B,4BAAQd,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,cAEF,4BACE,0BACEwB,MAAO,CAAEC,WAAY,IAAKC,WAAY,SAAUC,SAAU,UAEzDZ,EAAMa,QAGX,2BAAIb,EAAMc,eACV,uBAAGL,MAAO,CAAEM,UAAW,SAAUC,MAAO,SAAxC,qXChCS,aAAO,IAAD,EACsBnB,EAAc,IADpC,mBACZoB,EADY,KACLC,EADK,KACQC,EADR,OAE+BtB,EAAc,IAF7C,mBAEZuB,EAFY,KAEFC,EAFE,KAEcC,EAFd,KAInB,OACE,yBACEb,MAAO,CACLc,QAAS,OACTC,cAAe,WAGjB,6CACA,2BAAOC,KAAK,OAAOxC,MAAOgC,EAAOT,SAAUU,IAC3C,2BAAOO,KAAK,WAAWxC,MAAOmC,EAAUZ,SAAUa,IAClD,4BACEzB,QAAS,WACPuB,IACAG,MAHJ,UAQA,6CACkBL,EADlB,MAC4BG,EAAU,O,MCT7BM,MAXf,WACE,OACE,yBAAKC,UAAU,OACb,gDACA,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,QCNNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.4cb18315.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default (initialVal = false) => {\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  return [state, toggle];\n};\n","import { useState } from \"react\";\n\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React from 'react'\nimport { useToggle } from 'react-custom-hooks-collection'\n\nfunction TogglesDemo() {\n  const [isHappy, setIsHappy] = useToggle(true)\n  const [isHeartBroken, setIsHeartBroken] = useToggle(false)\n  const [isBanana, setIsBanana] = useToggle(true)\n\n  return (\n    <div>\n      <h2>Toggles</h2>\n      <h1 onClick={setIsHappy}>{isHappy ? 'üòÄ' : 'üò°'}</h1>\n      <h1 onClick={setIsHeartBroken}>{isHeartBroken ? 'üíî' : 'üíì'}</h1>\n      <h1 onClick={setIsBanana}>{isBanana ? 'üçå' : 'üçè'}</h1>\n    </div>\n  )\n}\n\nexport default TogglesDemo\n","import React, { useState, useEffect } from 'react'\nimport { useInputState } from 'react-custom-hooks-collection'\n\nexport default () => {\n  const [number, setNumber] = useInputState(1)\n  const [movie, setMovie] = useState('')\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const resp = await fetch(`https://swapi.dev/api/films/${number}`)\n      setMovie(await resp.json())\n    }\n    fetchMovie()\n  }, [number])\n\n  return (\n    <div>\n      <h2>Star Wars Movies (Online API)</h2>\n      <h3>Pick one</h3>\n      <select value={number} onChange={setNumber}>\n        <option value='1'>Chapter 1</option>\n        <option value='2'>Chapter 2</option>\n        <option value='3'>Chapter 3</option>\n        <option value='4'>Chapter 4</option>\n        <option value='5'>Chapter 5</option>\n        <option value='6'>Chapter 6</option>\n      </select>\n      <h4>\n        <span\n          style={{ fontWeight: 300, fontFamily: 'Roboto', fontSize: '1.3em' }}\n        >\n          {movie.title}\n        </span>\n      </h4>\n      <p>{movie.opening_crawl}</p>\n      <p style={{ fontStyle: 'italic', color: 'grey' }}>\n        Note: Thanks to the useEffect hook, some code can be triggered after a\n        rendering occured. In this case, once a movie number is selected, its\n        display is changed. This triggers the re-rendering of the component,\n        which in turn will trigger the useEffect code. We will therefore fetch\n        the remote data associated with the selected movie chapter after it is\n        being selected.\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useInputState } from 'react-custom-hooks-collection'\n\nexport default () => {\n  const [email, updateEmail, resetEmail] = useInputState('')\n  const [password, updatePassword, resetPassword] = useInputState('')\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column'\n      }}\n    >\n      <h2>Managed Input</h2>\n      <input type='text' value={email} onChange={updateEmail} />\n      <input type='password' value={password} onChange={updatePassword} />\n      <button\n        onClick={() => {\n          resetEmail()\n          resetPassword()\n        }}\n      >\n        Submit\n      </button>\n      <p>\n        The value is : {email} / {password}{' '}\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport TogglesDemo from './demoComponents/TogglesDemo'\nimport SWMoviesDemo from './demoComponents/SWMoviesDemo'\nimport InputTextDemo from './demoComponents/InputTextDemo'\nimport './styles.css'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <h1>React Hooks Demo</h1>\n      <TogglesDemo />\n      <SWMoviesDemo />\n      <InputTextDemo />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}