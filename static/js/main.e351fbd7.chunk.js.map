{"version":3,"sources":["../../src/hooks/useToggleState.js","../../src/hooks/useInputState.js","demoComponents/TogglesDemo.jsx","demoComponents/SWMoviesDemo.jsx","demoComponents/InputTextDemo.jsx","demoComponents/LocalStorageDemo.jsx","../../src/hooks/useLocalStorageState.js","demoComponents/LocalStorageReducerDemo.jsx","../../src/hooks/useLocalStorageReducer.js","App.js","index.js"],"names":["initialVal","useState","state","setState","value","e","setValue","TogglesDemo","useToggle","isHappy","setIsHappy","isHeartBroken","setIsHeartBroken","isBanana","setIsBanana","onClick","useInputState","number","setNumber","movie","setMovie","useEffect","a","fetch","resp","json","fetchMovie","onChange","style","fontWeight","fontFamily","fontSize","title","opening_crawl","className","email","updateEmail","resetEmail","password","updatePassword","resetPassword","display","flexDirection","type","key","defaultVal","val","JSON","window","String","error","useLocalStorageState","Date","currentDate","setCurrentDate","toLocaleString","count","reducer","useReducer","useLocalStorageReducer","task","todosReducer","todos","dispatch","stringify","todosState","action","App","SWMoviesDemo","InputTextDemo","LocalStorageDemo","LocalStorageReducerDemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e351fbd7.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default (initialVal = false) => {\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  return [state, toggle];\n};\n","import { useState } from \"react\";\n\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React from 'react'\nimport { useToggle } from 'react-custom-hooks-collection'\n\nfunction TogglesDemo() {\n  const [isHappy, setIsHappy] = useToggle(true)\n  const [isHeartBroken, setIsHeartBroken] = useToggle(false)\n  const [isBanana, setIsBanana] = useToggle(true)\n\n  return (\n    <div>\n      <h2>useToggle</h2>\n      <h1 onClick={setIsHappy}>{isHappy ? 'üòÄ' : 'üò°'}</h1>\n      <h1 onClick={setIsHeartBroken}>{isHeartBroken ? 'üíî' : 'üíì'}</h1>\n      <h1 onClick={setIsBanana}>{isBanana ? 'üçå' : 'üçè'}</h1>\n    </div>\n  )\n}\n\nexport default TogglesDemo\n","import React, { useState, useEffect } from 'react'\nimport { useInputState } from 'react-custom-hooks-collection'\n\nexport default () => {\n  const [number, setNumber] = useInputState(1)\n  const [movie, setMovie] = useState('')\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const resp = await fetch(`https://swapi.dev/api/films/${number}`)\n      setMovie(await resp.json())\n    }\n    fetchMovie()\n  }, [number])\n\n  return (\n    <div>\n      <h2>useInputState</h2>\n      <h3>Star Wars Movies (Online API)</h3>\n      <h4>Pick one</h4>\n      <select value={number} onChange={setNumber}>\n        <option value='1'>Chapter 1</option>\n        <option value='2'>Chapter 2</option>\n        <option value='3'>Chapter 3</option>\n        <option value='4'>Chapter 4</option>\n        <option value='5'>Chapter 5</option>\n        <option value='6'>Chapter 6</option>\n      </select>\n      <h4>\n        <span\n          style={{ fontWeight: 300, fontFamily: 'Roboto', fontSize: '1.3em' }}\n        >\n          {movie.title}\n        </span>\n      </h4>\n      <p>{movie.opening_crawl}</p>\n      <p className='note'>\n        Note: Thanks to the useEffect hook, some code can be triggered after a\n        rendering occured. In this case, once a movie number is selected, its\n        display is changed. This triggers the re-rendering of the component,\n        which in turn will trigger the useEffect code. We will therefore fetch\n        the remote data associated with the selected movie chapter after it is\n        being selected.\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useInputState } from 'react-custom-hooks-collection'\n\nexport default () => {\n  const [email, updateEmail, resetEmail] = useInputState('')\n  const [password, updatePassword, resetPassword] = useInputState('')\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column'\n      }}\n    >\n      <h2>useInputState</h2>\n      <h3>Managed Input</h3>\n      <input type='text' value={email} onChange={updateEmail} />\n      <input type='password' value={password} onChange={updatePassword} />\n      <button\n        onClick={() => {\n          resetEmail()\n          resetPassword()\n        }}\n      >\n        Submit\n      </button>\n      <p>\n        The value is : {email} / {password}{' '}\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useLocalStorageState } from 'react-custom-hooks-collection'\n\nexport default () => {\n  const [currentDate, setCurrentDate] = useLocalStorageState(\n    'lastSetDate',\n    new Date()\n  )\n\n  const handleClick = (e) => setCurrentDate(new Date())\n\n  const formatDate = (dateString) => new Date(dateString).toLocaleString()\n\n  return (\n    <div>\n      <h2>useLocalStorageState</h2>\n      <h3>Last save</h3>\n      <p>{formatDate(currentDate)}</p>\n      <button onClick={handleClick}>Save Date</button>\n      <p className='note'>\n        By pressing this button, the current date and time will be saved to\n        localStorage. You can close or refresh this browser tab or window, and\n        the date and time previously saved will be displayed above the button.\n      </p>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\n\nfunction UseLocalStorageState(key, defaultVal) {\n  // make a piece of state, based off of value in localStorage (or default)\n  const [state, setState] = useState(() => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (error) {\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  // use useEffect to update localStorage when state changes\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  //\n  return [state, setState];\n}\n\nexport default UseLocalStorageState;\n","import React from 'react'\nimport { useLocalStorageReducer } from 'react-custom-hooks-collection'\n\nlet count = 1\n\nexport default () => {\n  const [todos, dispatch] = useLocalStorageReducer(\n    'TodoReducerDemo',\n    [{ task: 'walk the fish' }],\n    todosReducer\n  )\n\n  const handleClick = () =>\n    dispatch({ type: 'ADD', task: `a new todo ${count++}` })\n\n  return (\n    <div>\n      <h2>useLocalStorageReducer</h2>\n      <h3>Todos</h3>\n      <button onClick={handleClick}>Add a Todo</button>\n      <p>\n        <code>{JSON.stringify(todos)}</code>\n      </p>\n\n      <p className='note'></p>\n    </div>\n  )\n}\n\nconst todosReducer = (todosState, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return [...todosState, { task: action.task }]\n\n    default:\n      return todosState\n  }\n}\n","import { useReducer, useEffect } from \"react\";\n\nfunction UseLocalStorageReducer(key, defaultVal, reducer) {\n  // make a piece of state, based off of value in localStorage (or default)\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (error) {\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  // use useEffect to update localStorage when state changes\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  //\n  return [state, dispatch];\n}\n\nexport default UseLocalStorageReducer;\n","import React from 'react'\nimport TogglesDemo from './demoComponents/TogglesDemo'\nimport SWMoviesDemo from './demoComponents/SWMoviesDemo'\nimport InputTextDemo from './demoComponents/InputTextDemo'\nimport LocalStorageDemo from './demoComponents/LocalStorageDemo'\nimport LocalStorageReducerDemo from './demoComponents/LocalStorageReducerDemo'\nimport './styles.css'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <h1>React Hooks Demo</h1>\n      <TogglesDemo />\n      <SWMoviesDemo />\n      <InputTextDemo />\n      <LocalStorageDemo />\n      <LocalStorageReducerDemo />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}